name: Bagisto Playwright Tests
on:
  push:
    branches: [ v2.2.2 ]
  pull_request:
    branches: [ v2.2.2 ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: bagisto-test
          MYSQL_USER: bagisto
          MYSQL_PASSWORD: bagisto
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -pwebkul"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client netcat-openbsd net-tools

      - name: Verify MySQL Connection
        run: |
          echo "Attempting to connect to MySQL..."

          # Comprehensive connection checks
          echo "Checking MySQL connectivity:"

          # Root user connection
          echo "Attempting root user connection:"
          mysqladmin -h 127.0.0.1 -P 3306 -u root -pwebkul ping || {
            echo "Root user connection failed"
            echo "MySQL service details:"
            sudo service mysql status
            sudo netstat -tuln | grep 3306
            exit 1
          }

          # Create test database
          mysql -h 127.0.0.1 -P 3306 -u root -pwebkul -e "CREATE DATABASE IF NOT EXISTS \`bagisto-test\`;" || {
            echo "Failed to create test database"
            exit 1
          }

          # Network connectivity
          nc -zv 127.0.0.1 3306 || {
            echo "Port 3306 not accessible"
            exit 1
          }

          # Show databases to verify connection
          mysql -h 127.0.0.1 -P 3306 -u root -pwebkul -e "SHOW DATABASES;" || {
            echo "Failed to list databases"
            exit 1
          }

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, bcmath, gd, pdo_mysql, mysql
          tools: composer

      - name: Prepare Application
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: bagisto-test
          DB_USERNAME: root
          DB_PASSWORD: webkul
        run: |
          # Prepare .env file
          cp .env.example .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=bagisto-test/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=webkul/' .env

          # Install dependencies and prepare application
          composer install
          php artisan key:generate
          php artisan migrate --seed

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Verify MySQL Connection
        run: |
          # Multiple connection verification attempts
          echo "Attempting to connect to MySQL..."

          # Try root connection
          mysqladmin -h mysql -P 3306 -u root -pwebkul ping || echo "Root ping failed"

          # Try bagisto user connection
          mysqladmin -h mysql -P 3306 -u bagisto -pbagisto ping || echo "Bagisto user ping failed"

          # Show MySQL process list
          mysql -h mysql -P 3306 -u root -pwebkul -e "SHOW PROCESSLIST;" || echo "Process list query failed"

      - name: Prepare Database
        env:
          DB_HOST: mysql
          DB_PORT: 3306
          DB_DATABASE: bagisto-test
          DB_USERNAME: root
          DB_PASSWORD: webkul
        run: |
          # Explicit database preparation
          mysql -h mysql -u root -pwebkul -e "CREATE DATABASE IF NOT EXISTS \`bagisto-test\`;"
          mysql -h mysql -u root -pwebkul -e "GRANT ALL PRIVILEGES ON \`bagisto-test\`.* TO 'root'@'%';"
          mysql -h mysql -u root -pwebkul -e "FLUSH PRIVILEGES;"

      - name: Install Dependencies
        run: |
          composer install
          cp .env.example .env

          # Explicitly set database connection details
          sed -i 's/DB_HOST=.*/DB_HOST=mysql/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=bagisto-test/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=webkul/' .env

      - name: Final MySQL Connectivity Test
        run: |
          echo "Final connectivity check:"
          php -r "
          try {
              \$conn = new PDO('mysql:host=mysql;dbname=bagisto-test', 'root', 'webkul');
              echo \"PDO Connection Successful\n\";
          } catch (PDOException \$e) {
              echo \"PDO Connection Failed: \" . \$e->getMessage() . \"\n\";
          }"

      - name: Set up application
        run: |
          php artisan key:generate
          php artisan migrate --seed
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: mysql
          DB_PORT: 3306
          DB_DATABASE: bagisto-test
          DB_USERNAME: bagisto
          DB_PASSWORD: bagisto

      - name: Start Laravel server
        run: php artisan serve --host=0.0.0.0 --port=8000 &

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        env:
          BASE_URL: 'http://localhost:8000'
        run: npx playwright test --workers=1

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
