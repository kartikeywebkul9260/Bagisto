name: Bagisto Playwright Tests

on:
  push:
    branches: [v2.2.2]
  pull_request:
    branches: [v2.2.2]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: webkul
          MYSQL_DATABASE: bagisto-test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -pwebkul"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client netcat-openbsd net-tools

      - name: Wait for MySQL
        run: |
          echo "Waiting for MySQL..."
          max_attempts=30
          attempt=0
          until mysqladmin ping -h 127.0.0.1 -uroot -pwebkul --silent; do
            if [ $attempt -ge $max_attempts ]; then
              echo "MySQL failed to start in time."
              exit 1
            fi
            echo "Waiting for MySQL... (attempt $((attempt+1))/$max_attempts)"
            sleep 2
            ((attempt++))
          done

      - name: Configure MySQL user privileges
        run: |
          mysql -h 127.0.0.1 -uroot -pwebkul -e "
            CREATE USER IF NOT EXISTS 'root'@'%' IDENTIFIED BY 'webkul';
            GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
            FLUSH PRIVILEGES;
          "

      - name: Set up application environment
        run: |
          cp .env.example .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=bagisto-test/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=webkul/' .env

      - name: Install PHP and dependencies
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl, bcmath, gd, pdo_mysql, mysql
          tools: composer

      - name: Install Composer dependencies
        run: composer install

      - name: Test MySQL Connectivity
        run: |
          echo "Testing MySQL connection..."
          php -r "
            try {
                \$pdo = new PDO('mysql:host=127.0.0.1;dbname=bagisto-test', 'root', 'webkul');
                echo 'Connected to MySQL successfully!';
            } catch (PDOException \$e) {
                echo 'Connection failed: ' . \$e->getMessage();
                exit(1);
            }
          "

      - name: Run Laravel migrations
        run: |
          php artisan key:generate
          php artisan migrate --seed
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: bagisto-test
          DB_USERNAME: root
          DB_PASSWORD: webkul

      - name: Start Laravel server
        run: nohup php artisan serve --host=0.0.0.0 --port=8000 > /dev/null 2>&1 &

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Admin Configuration general tests
        env:
          BASE_URL: 'http://127.0.0.1:8000'
        run: npx playwright test tests/admin/Configuration/general.spec --workers=1

      - name: Upload Playwright Videos of Admin Configuration general tests
        uses: actions/upload-artifact@v4
        if: always() # Upload videos even if tests fail
        with:
          name: playwright-videos
          path: videos/Configuration/general/
          retention-days: 30

      - name: Run Playwright Admin Configuration customer tests
        env:
          BASE_URL: 'http://127.0.0.1:8000'
        run: npx playwright test tests/admin/Configuration/customer.spec --workers=1

      - name: Upload Playwright Videos of Admin Configuration customer tests
        uses: actions/upload-artifact@v4
        if: always() # Upload videos even if tests fail
        with:
          name: playwright-videos
          path: videos/Configuration/customer/
          retention-days: 30

      - name: Run Playwright Admin Configuration catalog tests
        env:
          BASE_URL: 'http://127.0.0.1:8000'
        run: npx playwright test tests/admin/Configuration/catalog.spec --workers=1

      - name: Upload Playwright Videos of Admin Configuration catalog tests
        uses: actions/upload-artifact@v4
        if: always() # Upload videos even if tests fail
        with:
          name: playwright-videos
          path: videos/Configuration/catalog/
          retention-days: 30

      - name: Run Playwright Admin Configuration email tests
        env:
          BASE_URL: 'http://127.0.0.1:8000'
        run: npx playwright test tests/admin/Configuration/email.spec --workers=1

      - name: Upload Playwright Videos of Admin Configuration email tests
        uses: actions/upload-artifact@v4
        if: always() # Upload videos even if tests fail
        with:
          name: playwright-videos
          path: videos/Configuration/email/
          retention-days: 30

      - name: Run Playwright Admin Configuration sales tests
        env:
          BASE_URL: 'http://127.0.0.1:8000'
        run: npx playwright test tests/admin/Configuration/sales.spec --workers=1

      - name: Upload Playwright Videos of Admin Configuration sales tests
        uses: actions/upload-artifact@v4
        if: always() # Upload videos even if tests fail
        with:
          name: playwright-videos
          path: videos/Configuration/sales/
          retention-days: 30

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
